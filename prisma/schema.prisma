generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  accounts  Account[]
  insights  Insight[]

  @@map("users")
}

model Account {
  id               String        @id @default(cuid())
  userId           String
  plaidAccessToken String
  plaidItemId      String
  institutionName  String
  accountType      String
  accountName      String?
  accountSubtype   String?
  lastSync         DateTime?
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  user             User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions     Transaction[]

  @@unique([userId, plaidItemId, accountName])
  @@map("accounts")
}

model Transaction {
  id                 String   @id @default(cuid())
  accountId          String
  amount             Float
  date               DateTime
  name               String
  category           String?
  pending            Boolean  @default(false)
  plaidTransactionId String?  @unique
  merchantName       String?
  location           Json?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  account            Account  @relation(fields: [accountId], references: [id], onDelete: Cascade)

  @@map("transactions")
}

model Insight {
  id        String   @id @default(cuid())
  userId    String
  content   String
  type      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("insights")
}
