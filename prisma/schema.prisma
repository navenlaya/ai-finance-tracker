// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  accounts  Account[]
  insights  Insight[]

  @@map("users")
}

model Account {
  id               String   @id @default(cuid())
  userId           String
  plaidAccessToken String   // Encrypted Plaid access token
  plaidItemId      String   @unique // Plaid item ID
  institutionName  String
  accountType      String   // e.g., "checking", "savings", "credit"
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  // Relations
  user         User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]

  @@map("accounts")
}

model Transaction {
  id        String   @id @default(cuid())
  accountId String
  amount    Float    // Positive for income, negative for expenses
  date      DateTime
  name      String
  category  String?  // Transaction category
  pending   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  account Account @relation(fields: [accountId], references: [id], onDelete: Cascade)

  @@map("transactions")
}

model Insight {
  id        String   @id @default(cuid())
  userId    String
  content   String   // AI-generated insight content
  type      String   // e.g., "spending_pattern", "budget_alert", "savings_opportunity"
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("insights")
}
